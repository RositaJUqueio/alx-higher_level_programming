The 100-matrix_mul.py Module
=============================

"""
This module defines a matrix multiplication function ``matrix_mul(m_a, m_b)``.

Usage: 'matrix_mul(...)' returns a new matrix representing the multiplication 
of 'm_a' by 'm_b'.
"""


>>> matrix_mul = __import__('100-matrix_mul').matrix_mul

Test Cases
==========

# Test case with integers
>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
[[7, 10], [15, 22]]

# Test case with a single-row result
>>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
[[13, 16]]

# Test case with negative values
>>> matrix_mul([[-1, 2], [3, -4]], [[1, -2], [-3, 4]])
[[-7, 10], [15, -22]]

# Test case with a zero result
>>> matrix_mul([[0, -2]], [[-3, -4], [0, -6]])
[[0, 12]]

# Test case with floating-point values
>>> m_a = [[1.5, 2.5, 6.5], [4.256, -12.2, 8.2]]
>>> m_b = [[5.22, 13.3], [-22.9, 14.4], [7.22, 4.34]]
>>> result = matrix_mul(m_a, m_b)
>>> result = [[round(num, 2) for num in row] for row in result]
>>> result
[[-2.49, 84.16], [360.8, -83.49]]

# Test case with a combination of integers and float values
>>> m_a = [[1.5, 2.5, 6], [4, 2, 8]]
>>> m_b = [[5.22, 3], [-29, 4], [7.22, 4]]
>>> result = matrix_mul(m_a, m_b)
>>> result = [[round(num, 2) for num in row] for row in result]
>>> result
[[-21.35, 38.5], [20.64, 52]]

# Error handling tests
# TypeError is raised if no arguments are provided
>>> matrix_mul()
Traceback (most recent call last):
TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

# TypeError is raised if either m_a or m_b is not a list
>>> matrix_mul(1, [[1, 2], [3, 4]])
Traceback (most recent call last):
TypeError: m_a must be a list

# TypeError is raised if m_a or m_b is not a list of lists
>>> matrix_mul([[1, 2], [3, 4]], [1, 2])
Traceback (most recent call last):
TypeError: m_b must be a list of lists

# ValueError is raised if either m_a or m_b is empty
>>> matrix_mul([], [[1, 2], [3, 4]])
Traceback (most recent call last):
ValueError: m_a can't be empty

# TypeError is raised if either m_a or m_b has different-sized rows
>>> matrix_mul([[1, 2], [3, 4]], [[1, 2, 3], [4, 5, 6]])
Traceback (most recent call last):
TypeError: each row of m_a must be of the same size

# ValueError is raised if m_a and m_b cannot be multiplied
>>> matrix_mul([[1, 2], [3, 4]], [[1, 2, 3], [4, 5, 6], [7, 8, 9]])
Traceback (most recent call last):
ValueError: m_a and m_b can't be multiplied
